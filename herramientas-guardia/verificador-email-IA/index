<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Emails revisados con GUARD-IA</title>
    <script src="https://cdn.tailwindcss.com?plugins=forms,typography,aspect-ratio,line-clamp"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <style>
        :root {
            --bg-color: #0a0a0a; 
            --card-color: #1a1a1a; 
            --text-color: #e0e0e0; 
            --text-medium-color: #a0a0a0;
            --accent-color: #39FF14; 
            --border-color: rgba(255, 255, 255, 0.1);
            --input-bg: #2a2a2a; 
            --info-fixed-text: #0a0a0a;
            --result-bg: #1f2937;
            --error-color: #ff4d4d;
            --warning-color: #facc15; /* Amber 400 */
        }
        body { 
            background-color: var(--bg-color); 
            color: var(--text-color); 
            font-family: 'Inter', sans-serif;
            background-image: radial-gradient(rgba(255, 255, 255, 0.05) 1px, transparent 0);
            background-size: 25px 25px;
        }
        .btn {
            background-color: var(--accent-color);
            color: var(--info-fixed-text);
            transition: opacity 0.3s ease, transform 0.3s ease;
            font-weight: 600;
        }
        .btn:hover {
            opacity: 0.85;
        }
        .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        .loader {
            border: 4px solid var(--border-color);
            border-top: 4px solid var(--accent-color);
            border-radius: 50%;
            width: 24px;
            height: 24px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
        #result-container h3 {
            color: var(--accent-color);
            font-size: 1.25rem;
            margin-bottom: 0.5rem;
        }
        #result-container strong {
            color: var(--accent-color);
        }
        
        /* Modal Styles */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.7);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            backdrop-filter: blur(5px);
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s, visibility 0.3s;
        }
        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }
        .modal-content {
            background-color: var(--card-color);
            padding: 2rem;
            border-radius: 1rem;
            border: 1px solid var(--border-color);
            width: 90%;
            max-width: 600px;
            transform: scale(0.95);
            transition: transform 0.3s;
        }
        .modal-overlay.active .modal-content {
            transform: scale(1);
        }

        /* Tab Styles */
        .tab-btn {
            background: transparent;
            border: none;
            padding: 0.75rem 1rem;
            color: var(--text-medium-color);
            cursor: pointer;
            border-bottom: 2px solid transparent;
            transition: color 0.3s, border-color 0.3s;
        }
        .tab-btn.active {
            color: var(--accent-color);
            border-bottom-color: var(--accent-color);
        }
        .tab-content {
            display: none;
        }
        .tab-content.active {
            display: block;
        }
    </style>
</head>
<body class="flex flex-col min-h-screen">
    <header class="p-4 z-50 flex justify-between items-center bg-[var(--card-color)] border-b border-[var(--border-color)] sticky top-0 shadow-lg">
        <a href="#" class="flex items-center gap-3 text-white hover:text-[var(--accent-color)] transition-colors">
             <i class="fas fa-shield-halved text-xl"></i>
            <h2 class="text-lg font-semibold">GUARD-IA</h2>
        </a>
    </header>

    <main class="flex-grow container mx-auto px-4 sm:px-6 lg:px-8 py-10">
        <div class="max-w-4xl mx-auto">
            <div class="text-center mb-8">
                <i class="fas fa-shield-alt text-5xl text-[var(--accent-color)] mb-4"></i>
                <h1 class="text-3xl sm:text-4xl font-bold">Emails revisados con GUARD-IA</h1>
                <p class="text-lg text-[var(--text-medium-color)] mt-2">Pega el encabezado completo de un correo para un análisis de seguridad forense.</p>
            </div>
            
            <div class="bg-[var(--card-color)] p-6 rounded-xl border border-[var(--border-color)]">
                <textarea id="email-header" class="w-full h-48 p-3 bg-[var(--input-bg)] rounded-md border border-[var(--border-color)] focus:ring-2 focus:ring-[var(--accent-color)] focus:outline-none" placeholder="Pega aquí el encabezado del correo electrónico..."></textarea>
                
                <div class="text-right mt-2">
                    <button id="how-to-btn" class="text-sm text-[var(--text-medium-color)] hover:text-[var(--accent-color)] transition-colors">
                        ¿Cómo obtengo el encabezado?
                    </button>
                </div>
                
                <div id="error-message" class="text-center text-sm text-[var(--error-color)] mt-3 h-4"></div>

                <button id="analyze-btn" class="btn w-full mt-1 py-3 rounded-md flex items-center justify-center gap-2">
                    <span id="btn-text">Analizar Encabezado</span>
                    <div id="btn-loader" class="loader hidden"></div>
                </button>
            </div>

            <!-- Disclaimer Section -->
            <div class="mt-8 bg-yellow-900/20 border border-yellow-700/50 text-yellow-200 px-4 py-3 rounded-xl text-sm flex gap-4 items-start">
                <div class="pt-1">
                    <i class="fas fa-exclamation-triangle text-[var(--warning-color)]"></i>
                </div>
                <div>
                    <h4 class="font-bold text-white mb-1">Aviso Importante</h4>
                    <p class="text-yellow-300/80">GUARD-IA es una herramienta orientativa basada en IA. Su análisis es una recomendación, no una garantía. La responsabilidad final sobre cualquier acción tomada es exclusivamente del usuario.</p>
                    <p class="mt-2 text-yellow-300/80"><strong class="text-[var(--warning-color)]">Consejo de experto:</strong> Desconfía siempre de los mensajes que te infunden un sentido de urgencia o despiertan emociones fuertes. Es una táctica común para anular tu juicio.</p>
                </div>
            </div>

            <div id="result-container" class="mt-8 bg-[var(--result-bg)] p-6 rounded-xl border border-[var(--border-color)] hidden">
                <h3 class="font-bold">Análisis de IA:</h3>
                <div id="analysis-result" class="prose prose-invert max-w-none text-gray-300 whitespace-pre-wrap"></div>
            </div>
        </div>
    </main>
    
    <footer class="py-6 text-center">
        <a href="https://t.me/OnefraGT" target="_blank" rel="noopener noreferrer" class="flex items-center justify-center gap-2 text-[var(--text-medium-color)] hover:text-[var(--accent-color)] transition-colors">
            <i class="fab fa-telegram-plane text-xl"></i> Contacta con @OnefraGT
        </a>
    </footer>

    <!-- Modal for "How-to" Instructions -->
    <div id="how-to-modal" class="modal-overlay">
        <div class="modal-content">
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-2xl font-bold text-white">Obtener el Encabezado del Correo</h2>
                <button id="close-modal-btn" class="text-2xl text-[var(--text-medium-color)] hover:text-white">&times;</button>
            </div>
            
            <!-- Tabs -->
            <div class="border-b border-[var(--border-color)] mb-4">
                <button class="tab-btn active" data-tab="gmail">
                    <i class="fab fa-google mr-2"></i>Gmail
                </button>
                <button class="tab-btn" data-tab="outlook">
                    <i class="fas fa-envelope-open-text mr-2"></i>Outlook
                </button>
                <button class="tab-btn" data-tab="yahoo">
                    <i class="fab fa-yahoo mr-2"></i>Yahoo
                </button>
            </div>

            <!-- Tab Content -->
            <div id="tab-gmail" class="tab-content active text-[var(--text-medium-color)] space-y-3">
                <p>1. Abre el correo que quieres verificar en la página de Gmail.</p>
                <p>2. Haz clic en el icono de los **tres puntos verticales** (Más) en la esquina superior derecha del panel del correo.</p>
                <p>3. En el menú desplegable, selecciona **"Mostrar original"**.</p>
                <p>4. Se abrirá una nueva pestaña con el encabezado completo. Copia todo el texto y pégalo en GUARD-IA.</p>
            </div>
            <div id="tab-outlook" class="tab-content text-[var(--text-medium-color)] space-y-3">
                <p>1. Abre el correo que quieres verificar en la página de Outlook/Hotmail.</p>
                <p>2. Haz clic en el icono de los **tres puntos horizontales** (...) en la esquina superior derecha del panel del correo.</p>
                <p>3. Ve a **Ver > Ver detalles del mensaje**.</p>
                <p>4. Se abrirá una ventana con el encabezado. Copia todo el texto y pégalo en GUARD-IA.</p>
            </div>
            <div id="tab-yahoo" class="tab-content text-[var(--text-medium-color)] space-y-3">
                <p>1. Abre el correo que quieres verificar en la página de Yahoo Mail.</p>
                <p>2. Haz clic en el icono de los **tres puntos horizontales** (Más) sobre el mensaje.</p>
                <p>3. Selecciona **"Ver mensaje sin formato"** (View raw message).</p>
                <p>4. Se abrirá una nueva pestaña con el encabezado. Copia todo el texto y pégalo en GUARD-IA.</p>
            </div>
        </div>
    </div>

    <script>
        const analyzeBtn = document.getElementById('analyze-btn');
        const btnText = document.getElementById('btn-text');
        const btnLoader = document.getElementById('btn-loader');
        const emailHeaderInput = document.getElementById('email-header');
        const resultContainer = document.getElementById('result-container');
        const analysisResult = document.getElementById('analysis-result');
        const errorMessage = document.getElementById('error-message');
        
        // Modal elements
        const howToBtn = document.getElementById('how-to-btn');
        const closeModalBtn = document.getElementById('close-modal-btn');
        const modal = document.getElementById('how-to-modal');

        // Modal event listeners
        howToBtn.addEventListener('click', () => modal.classList.add('active'));
        closeModalBtn.addEventListener('click', () => modal.classList.remove('active'));
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.classList.remove('active');
            }
        });

        // Tab functionality
        const tabButtons = document.querySelectorAll('.tab-btn');
        const tabContents = document.querySelectorAll('.tab-content');

        tabButtons.forEach(button => {
            button.addEventListener('click', () => {
                tabButtons.forEach(btn => btn.classList.remove('active'));
                button.classList.add('active');

                const tabId = button.dataset.tab;
                tabContents.forEach(content => {
                    content.classList.remove('active');
                    if (content.id === `tab-${tabId}`) {
                        content.classList.add('active');
                    }
                });
            });
        });


        // Analysis button click listener
        analyzeBtn.addEventListener('click', async () => {
            const headerText = emailHeaderInput.value.trim();
            if (!headerText) {
                errorMessage.textContent = 'Por favor, pega el encabezado del correo antes de analizar.';
                setTimeout(() => errorMessage.textContent = '', 3000);
                return;
            }

            // UI state: loading
            errorMessage.textContent = '';
            btnText.textContent = 'Analizando...';
            btnLoader.classList.remove('hidden');
            analyzeBtn.disabled = true;
            resultContainer.classList.add('hidden');
            analysisResult.textContent = '';
            
            // This is the new, more powerful prompt.
            const prompt = `Eres GUARDIAN, el analista de ciberseguridad más avanzado del mundo, especializado en la detección de amenazas por correo electrónico. Tu misión es analizar el siguiente encabezado de correo con la máxima diligencia. Desglosa tu análisis en las siguientes secciones obligatorias, utilizando Markdown para el formato (negritas, listas):
            
1.  **VEREDICTO INICIAL:** Una sola palabra: SEGURO, SOSPECHOSO, PELIGROSO o MUY PELIGROSO.
2.  **NIVEL DE RIESGO:** Cuantifícalo de 0 a 100.
3.  **RESUMEN EJECUTIVO:** Un párrafo corto explicando la conclusión principal.
4.  **ANÁLISIS TÉCNICO DETALLADO:** Explica punto por punto los hallazgos clave en los registros SPF, DKIM, DMARC, la ruta de los servidores ('Received'), y cualquier otra anomalía encontrada. Sé técnico pero claro.
5.  **RECOMENDACIÓN FINAL:** ¿Qué debe hacer el usuario con este correo? (Ej: "Eliminar inmediatamente", "Tratar con precaución", "Parece seguro, pero no hagas clic en enlaces desconocidos").
        
El encabezado a analizar es el siguiente:
---
${headerText}`;

            try {
                let chatHistory = [{ role: "user", parts: [{ text: prompt }] }];
                const payload = { contents: chatHistory };
                const apiKey = ""; // API key is handled by the environment
                const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;
                
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
                
                if (!response.ok) {
                    const errorBody = await response.text();
                    throw new Error(`Error en la API: ${response.statusText} - ${errorBody}`);
                }

                const result = await response.json();
                
                if (result.candidates && result.candidates[0] && result.candidates[0].content.parts[0]) {
                    const analysisText = result.candidates[0].content.parts[0].text;
                    analysisResult.innerText = analysisText; // Use innerText to correctly render newlines from the model's response
                    resultContainer.classList.remove('hidden');
                } else {
                    // Check for blocked content due to safety settings
                    if (result.candidates && result.candidates[0].finishReason === 'SAFETY') {
                         throw new Error('El análisis fue bloqueado por políticas de seguridad. El contenido podría ser inapropiado.');
                    } else {
                         throw new Error('La respuesta de la API no tuvo el formato esperado. Detalles: ' + JSON.stringify(result, null, 2));
                    }
                }

            } catch (error) {
                console.error("Error al analizar:", error);
                analysisResult.textContent = `Hubo un error al procesar el análisis. Por favor, inténtalo de nuevo más tarde.\n\nError: ${error.message}`;
                resultContainer.classList.remove('hidden');
            } finally {
                // UI state: reset
                btnText.textContent = 'Analizar Encabezado';
                btnLoader.classList.add('hidden');
                analyzeBtn.disabled = false;
            }
        });
    </script>
</body>
</html>
